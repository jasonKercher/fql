
// Generated from TSqlLexer.g4 by ANTLR 4.7.2

#pragma once


#include "antlr4-runtime.h"




class  TSqlLexer : public antlr4::Lexer {
public:
  enum {
    ADD = 1, ALL = 2, ALTER = 3, AND = 4, ANY = 5, AS = 6, ASC = 7, AUTHORIZATION = 8, 
    BACKSLASH = 9, BEGIN = 10, BETWEEN = 11, BREAK = 12, BY = 13, CASE = 14, 
    CHECK = 15, CLOSE = 16, COALESCE = 17, COLLATE = 18, COLUMN = 19, COMMIT = 20, 
    COMPUTE = 21, CONSTRAINT = 22, CONTINUE = 23, CONVERT = 24, CREATE = 25, 
    CROSS = 26, CURRENT = 27, CURRENT_DATE = 28, CURRENT_TIME = 29, CURRENT_TIMESTAMP = 30, 
    CURRENT_USER = 31, CURSOR = 32, DATABASE = 33, DBCC = 34, DEALLOCATE = 35, 
    DECLARE = 36, DEFAULT = 37, DELETE = 38, DESC = 39, DISTINCT = 40, DISTRIBUTED = 41, 
    DOUBLE = 42, DOUBLE_BACK_SLASH = 43, DOUBLE_FORWARD_SLASH = 44, DROP = 45, 
    ELSE = 46, END = 47, ESCAPE = 48, EXCEPT = 49, EXECUTE = 50, EXISTS = 51, 
    FETCH = 52, FOR = 53, FOREIGN = 54, FROM = 55, FULL = 56, FUNCTION = 57, 
    GOTO = 58, GROUP = 59, HAVING = 60, HOLDLOCK = 61, IDENTITY = 62, IDENTITY_INSERT = 63, 
    IF = 64, IN = 65, INDEX = 66, INNER = 67, INSERT = 68, INTERSECT = 69, 
    INTO = 70, IS = 71, JOIN = 72, KEY = 73, KILL = 74, LEFT = 75, LIKE = 76, 
    MERGE = 77, NOT = 78, NULL_ = 79, NULLIF = 80, OF = 81, OFF = 82, ON = 83, 
    OPEN = 84, OPTION = 85, OR = 86, ORDER = 87, OUTER = 88, OVER = 89, 
    PERCENT = 90, PIVOT = 91, PLAN = 92, PRECISION = 93, PRIMARY = 94, PRINT = 95, 
    PROC = 96, PROCEDURE = 97, RAISERROR = 98, READ = 99, REFERENCES = 100, 
    REPLICATION = 101, RETURN = 102, REVERT = 103, RIGHT = 104, ROLLBACK = 105, 
    ROWCOUNT = 106, ROWGUIDCOL = 107, SAVE = 108, SCHEMA = 109, SELECT = 110, 
    SESSION_USER = 111, SET = 112, SHUTDOWN = 113, SOME = 114, SYSTEM_USER = 115, 
    TABLE = 116, THEN = 117, TO = 118, TOP = 119, TRAN = 120, TRANSACTION = 121, 
    TRUNCATE = 122, UNION = 123, UNIQUE = 124, UNPIVOT = 125, UPDATE = 126, 
    USE = 127, USER = 128, VALUES = 129, VARYING = 130, WHEN = 131, WHERE = 132, 
    WHILE = 133, WITH = 134, WITHIN = 135, DOLLAR_PARTITION = 136, ABSOLUTE = 137, 
    AT_KEYWORD = 138, ACTION = 139, AES_128 = 140, AES_192 = 141, AES_256 = 142, 
    ALGORITHM = 143, ANSI_NULLS = 144, ANSI_PADDING = 145, ANSI_WARNINGS = 146, 
    APPLY = 147, ARITHABORT = 148, AUTO = 149, AVG = 150, BIGINT = 151, 
    BINARY_KEYWORD = 152, BINARY_BASE64 = 153, BINARY_CHECKSUM = 154, CALLER = 155, 
    CAST = 156, TRY_CAST = 157, CATCH = 158, CHECKSUM = 159, CHECKSUM_AGG = 160, 
    COMMITTED = 161, CONCAT = 162, CONCAT_NULL_YIELDS_NULL = 163, COUNT = 164, 
    COUNT_BIG = 165, CUME_DIST = 166, CURSOR_CLOSE_ON_COMMIT = 167, CURSOR_DEFAULT = 168, 
    DATA = 169, DATEADD = 170, DATEDIFF = 171, DATENAME = 172, DATEPART = 173, 
    DAYS = 174, DEFAULT_DOUBLE_QUOTE = 175, DELAYED_DURABILITY = 176, DELETED = 177, 
    DENSE_RANK = 178, DES = 179, DESCRIPTION = 180, DESX = 181, DISABLE = 182, 
    DYNAMIC = 183, ELEMENTS = 184, EMPTY = 185, ENCRYPTION = 186, EXCLUSIVE = 187, 
    FAST = 188, FAST_FORWARD = 189, FIRST = 190, FIRST_VALUE = 191, FOLLOWING = 192, 
    FORCE = 193, FORCED = 194, FORWARD_ONLY = 195, GETDATE = 196, GETUTCDATE = 197, 
    GLOBAL = 198, GO_BATCH = 199, GO = 200, GROUPING = 201, GROUPING_ID = 202, 
    HASH = 203, HIGH = 204, HOURS = 205, IDENTITY_VALUE = 206, INCLUDE_NULL_VALUES = 207, 
    INPUT = 208, INSENSITIVE = 209, INSERTED = 210, INT = 211, ISOLATION = 212, 
    KEEP = 213, KEEPFIXED = 214, KEYSET = 215, LAG = 216, LAST = 217, LAST_VALUE = 218, 
    LEAD = 219, LEVEL = 220, LOCAL = 221, LOCATION = 222, LOCK = 223, LOCK_ESCALATION = 224, 
    LOOP = 225, LOW = 226, MANUAL = 227, MARK = 228, MAX = 229, MAXDOP = 230, 
    MAXRECURSION = 231, MIN = 232, MIN_ACTIVE_ROWVERSION = 233, MINUTES = 234, 
    MODE = 235, NEXT = 236, NO = 237, NOCOUNT = 238, NODES = 239, NOEXPAND = 240, 
    NOWAIT = 241, NTILE = 242, NUMANODE = 243, NUMERIC_ROUNDABORT = 244, 
    OBJECT = 245, OFFSET = 246, ONLINE = 247, ONLY = 248, OPTIMISTIC = 249, 
    OPTIMIZE = 250, OUT = 251, OUTPUT = 252, OWNER = 253, PARAMETERIZATION = 254, 
    PARTITION = 255, PARTITIONS = 256, PERCENT_RANK = 257, PERCENTILE_CONT = 258, 
    PERCENTILE_DISC = 259, PRECEDING = 260, PRIOR = 261, QUERY = 262, QUOTED_IDENTIFIER = 263, 
    RANGE = 264, RANK = 265, RC2 = 266, RC4 = 267, RC4_128 = 268, READ_ONLY = 269, 
    READONLY = 270, REBUILD = 271, RECOMPILE = 272, RELATIVE = 273, REMOTE = 274, 
    REPEATABLE = 275, ROBUST = 276, ROW = 277, ROW_NUMBER = 278, ROWGUID = 279, 
    ROWS = 280, SCHEMABINDING = 281, SCROLL = 282, SCROLL_LOCKS = 283, SECONDS = 284, 
    SELF = 285, SEMI_SENSITIVE = 286, SEQUENCE = 287, SERIALIZABLE = 288, 
    SETERROR = 289, SHARE = 290, SIMPLE = 291, SIZE = 292, SMALLINT = 293, 
    SNAPSHOT = 294, SPATIAL_WINDOW_MAX_CELLS = 295, STATIC = 296, STATUSONLY = 297, 
    STDEV = 298, STDEVP = 299, STRING_AGG = 300, STUFF = 301, SUBSCRIPTION = 302, 
    SUM = 303, TEXTIMAGE_ON = 304, THROW = 305, TIES = 306, TIME = 307, 
    TINYINT = 308, TRIPLE_DES = 309, TRIPLE_DES_3KEY = 310, TRY = 311, TWO_DIGIT_YEAR_CUTOFF = 312, 
    TYPE = 313, TYPE_WARNING = 314, UNBOUNDED = 315, UNCOMMITTED = 316, 
    UNKNOWN = 317, UOW = 318, USING = 319, VAR = 320, VARBINARY_KEYWORD = 321, 
    VARP = 322, WAIT = 323, WORK = 324, ZONE = 325, DOLLAR_ACTION = 326, 
    BLOCKING_HIERARCHY = 327, CACHE = 328, CALLED = 329, CHANGETABLE = 330, 
    CHANGES = 331, CONNECTION = 332, CONTRACT = 333, CYCLE = 334, DATA_COMPRESSION = 335, 
    DDL = 336, ERROR = 337, EVENT = 338, FORCESEEK = 339, IIF = 340, INCREMENT = 341, 
    ISNULL = 342, LOG = 343, MATCHED = 344, MAXVALUE = 345, MINVALUE = 346, 
    NOTIFICATION = 347, PERSISTED = 348, PREDICATE = 349, RESTART = 350, 
    RETURNS = 351, SHRINKLOG = 352, SOURCE = 353, SQL = 354, STATE = 355, 
    START = 356, TARGET = 357, WITHOUT = 358, VARCHAR = 359, NVARCHAR = 360, 
    SPACE = 361, COMMENT = 362, LINE_COMMENT = 363, DOUBLE_QUOTE_ID = 364, 
    SINGLE_QUOTE = 365, SQUARE_BRACKET_ID = 366, LOCAL_ID = 367, DECIMAL = 368, 
    ID = 369, STRING = 370, BINARY = 371, FLOAT = 372, REAL = 373, EQUAL = 374, 
    GREATER = 375, LESS = 376, EXCLAMATION = 377, PLUS_ASSIGN = 378, MINUS_ASSIGN = 379, 
    MULT_ASSIGN = 380, DIV_ASSIGN = 381, MOD_ASSIGN = 382, AND_ASSIGN = 383, 
    XOR_ASSIGN = 384, OR_ASSIGN = 385, DOUBLE_BAR = 386, DOT = 387, UNDERLINE = 388, 
    AT = 389, SHARP = 390, DOLLAR = 391, LR_BRACKET = 392, RR_BRACKET = 393, 
    COMMA = 394, SEMI = 395, COLON = 396, DOUBLE_COLON = 397, STAR = 398, 
    DIVIDE = 399, MODULE = 400, PLUS = 401, MINUS = 402, BIT_NOT = 403, 
    BIT_OR = 404, BIT_AND = 405, BIT_XOR = 406
  };

  TSqlLexer(antlr4::CharStream *input);
  ~TSqlLexer();

  virtual std::string getGrammarFileName() const override;
  virtual const std::vector<std::string>& getRuleNames() const override;

  virtual const std::vector<std::string>& getChannelNames() const override;
  virtual const std::vector<std::string>& getModeNames() const override;
  virtual const std::vector<std::string>& getTokenNames() const override; // deprecated, use vocabulary instead
  virtual antlr4::dfa::Vocabulary& getVocabulary() const override;

  virtual const std::vector<uint16_t> getSerializedATN() const override;
  virtual const antlr4::atn::ATN& getATN() const override;

private:
  static std::vector<antlr4::dfa::DFA> _decisionToDFA;
  static antlr4::atn::PredictionContextCache _sharedContextCache;
  static std::vector<std::string> _ruleNames;
  static std::vector<std::string> _tokenNames;
  static std::vector<std::string> _channelNames;
  static std::vector<std::string> _modeNames;

  static std::vector<std::string> _literalNames;
  static std::vector<std::string> _symbolicNames;
  static antlr4::dfa::Vocabulary _vocabulary;
  static antlr4::atn::ATN _atn;
  static std::vector<uint16_t> _serializedATN;


  // Individual action functions triggered by action() above.

  // Individual semantic predicate functions triggered by sempred() above.

  struct Initializer {
    Initializer();
  };
  static Initializer _init;
};

